# Nala Aliases
alias n='nala' # A faster, prettier front-end for libapt
alias nf='nala fetch' # Nala Fastest Mirror
alias nu='nala update' # Nala Update
alias nfu='nala upgrade -y' # Nala Update & Full-Upgrade
alias ni='nala install -y' # Nala Install
alias nr='nala remove -y' # Nala Remove
alias np='nala purge -y' # Nala Purge
alias nc='nala clean' # Nala Clean
alias na='nala autoremove -y' # Nala Auto Remove
alias nh='nala history' # Nala History
alias nl='nala list' # Nala List
alias ns='nala search' # Nala Search
alias nv='nala show' # Nala View Package Info

# Bun Aliases
alias bun='grun ~/.bun/bin/bun'
alias bn='grun ~/.bun/bin/bun' # A complete toolkit for building JavaScript apps
alias bni='grun ~/.bun/bin/bun install' # Bun Install
alias bnr='grun ~/.bun/bin/bun run' # Bun Run
alias bnt='grun ~/.bun/bin/bun test' # Bun Test
alias bnx='grun ~/.bun/bin/bun x' # Bunx
alias bnrpl='grun ~/.bun/bin/bun repl' # Bun Repl
alias bnini='grun ~/.bun/bin/bun init' # Bun Init
alias bnc='grun ~/.bun/bin/bun create' # Bun Create
alias bna='grun ~/.bun/bin/bun add' # Bun Add
alias bnrm='grun ~/.bun/bin/bun remove' # Bun Remove
alias bnu='grun ~/.bun/bin/bun update' #Bun Update
alias bnl='grun ~/.bun/bin/bun link' # Bun Link
alias bnul='grun ~/.bun/bin/bun unlink' # Bun Unlink
alias bnpm='grun ~/.bun/bin/bun pm' # Bun Package Manager
alias bnb='grun ~/.bun/bin/bun build' # Bun Build
alias bnup='grun ~/.bun/bin/bun upgrade' # Bun Upgrade
alias bnli='grun ~/.bun/bin/bun lint' # Run Prettier & ESLint
alias bnlf='grun ~/.bun/bin/bun lintfix' # Run Prettier & ESLint, Fix Errors

# PNPM Aliases
alias pi='pnpm install' # PNPM Install Packages from package.json
alias p='pnpm' # PNPM Package Manager
alias pa='pnpm add' # PNPM Add Package
alias pb='pnpm build' # PNPM Create Bundle Package
alias pcl='pnpm config list' # PNPM Config List
alias pi='pnpm install' # PNPM Install from package.json
alias pil='pnpm install --frozen-lockfile' # PNPM Lockfile not updated
alias pin='pnpm install --no-lockfile' # PNPM Lockfile not generated
alias pu='pnpm update' # PNPM Update Packages
alias pr='pnpm run' # PNPM Run Script
alias prm='pnpm remove' # PNPM Remove Package
alias prd='pnpm dev -o' # PNPM Run Dev
alias pl='pnpm lint' # Run Prettier & ESLint
alias plf='pnpm lintfix' # Run Prettier & ESLint, Fix Errors
alias pt='pnpm test' # PNPM Run Test
alias pau='pnpm audit' # PNPM Audit Vuln Deps
alias pauf='pnpm audit --fix' # PNPM Fix Vuln Deps

# Taskwarrior Aliases
alias t='task' # Taskwarrior
alias ta='task add' # Add Task to Taskwarrior
alias td='task delete' # Delete Task from Taskwarrior
alias tda='task purge' # Purge Tasks in Taskwarrior
alias ts='task start' # Start Task in Taskwarrior
alias tp='task stop' # End Task in Taskwarrior
alias tc='task done' # Complete Task in Taskwarrior
alias tl='task list' # List all Tasks
alias tm='task modify' # Modify Task Attribute
alias tlw='task entry.after:now-1wk list' # List Tasks created in the last week
alias tlm='task entry.after:now-4wk list' # List Tasks created in the last month

# Git Bare Aliases
alias b='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME' #Git Bare
alias ba='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME add' # Git Bare Add
alias bam='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME commit -p -S -m' #Git Bare Commit Patch Sign Message
alias bs='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME status' # Git Bare Status
alias bad='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME diff' # Git Bare Diff
alias bpu='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME push' # Git Bare Push
alias bpl='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME pull' # Git Bare Pull
alias bcd='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME checkout dev' # Git Checkout Dev
alias bcm='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME checkout main' # Git Checkout Main
alias bmd='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME checkout main && git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME merge dev -m' # Git Bare Checkout Main & Merge Dev into Main
alias buc='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME assume-unchanged' # Git Bare Assume Specified File(s) Unchanged
alias bch='git --git-dir=$HOME/GitHub/dotfiles --work-tree=$HOME assume-changed' # Git Bare Assume Specified File(s) Changed

# kubectl
k=kubectl
kaf='kubectl apply -f'
kca='_kca(){ kubectl "$@" --all-namespaces;  unset -f _kca; }; _kca'
kccc='kubectl config current-context'
kcdc='kubectl config delete-context'
kcgc='kubectl config get-contexts'
kcn='kubectl config set-context --current --namespace'
kcp='kubectl cp'
kcsc='kubectl config set-context'
kctx=kubectx
kcuc='kubectl config use-context'
kdcj='kubectl describe cronjob'
kdcm='kubectl describe configmap'
kdd='kubectl describe deployment'
kdds='kubectl describe daemonset'
kdel='kubectl delete'
kdelcj='kubectl delete cronjob'
kdelcm='kubectl delete configmap'
kdeld='kubectl delete deployment'
kdelds='kubectl delete daemonset'
kdelf='kubectl delete -f'
kdeli='kubectl delete ingress'
kdelj='kubectl delete job'
kdelno='kubectl delete node'
kdelns='kubectl delete namespace'
kdelp='kubectl delete pods'
kdelpvc='kubectl delete pvc'
kdels='kubectl delete svc'
kdelsa='kubectl delete sa'
kdelsec='kubectl delete secret'
kdelss='kubectl delete statefulset'
kdi='kubectl describe ingress'
kdj='kubectl describe job'
kdno='kubectl describe node'
kdns='kubectl describe namespace'
kdp='kubectl describe pods'
kdpvc='kubectl describe pvc'
kdrs='kubectl describe replicaset'
kds='kubectl describe svc'
kdsa='kubectl describe sa'
kdsec='kubectl describe secret'
kdss='kubectl describe statefulset'
kecj='kubectl edit cronjob'
kecm='kubectl edit configmap'
ked='kubectl edit deployment'
keds='kubectl edit daemonset'
kei='kubectl edit ingress'
kej='kubectl edit job'
keno='kubectl edit node'
kens='kubectl edit namespace'
kep='kubectl edit pods'
kepvc='kubectl edit pvc'
kers='kubectl edit replicaset'
kes='kubectl edit svc'
kess='kubectl edit statefulset'
keti='kubectl exec -t -i'
kga='kubectl get all'
kgaa='kubectl get all --all-namespaces'
kgcj='kubectl get cronjob'
kgcm='kubectl get configmaps'
kgcma='kubectl get configmaps --all-namespaces'
kgd='kubectl get deployment'
kgda='kubectl get deployment --all-namespaces'
kgds='kubectl get daemonset'
kgdsa='kubectl get daemonset --all-namespaces'
kgi='kubectl get ingress'
kgia='kubectl get ingress --all-namespaces'
kgj='kubectl get job'
kgno='kubectl get nodes'
kgns='kubectl get namespaces'
kgp='kubectl get pods'
kgpa='kubectl get pods --all-namespaces'
kgpall='kubectl get pods --all-namespaces -o wide'
kgpvc='kubectl get pvc'
kgpvca='kubectl get pvc --all-namespaces'
kgrs='kubectl get replicaset'
kgs='kubectl get svc'
kgsa='kubectl get svc --all-namespaces'
kgsec='kubectl get secret'
kgseca='kubectl get secret --all-namespaces'
kgss='kubectl get statefulset'
kgssa='kubectl get statefulset --all-namespaces'
kk='kubectl krew'
kl='kubectl logs'
kl1h='kubectl logs --since 1h'
kl1m='kubectl logs --since 1m'
kl1s='kubectl logs --since 1s'
klf='kubectl logs -f'
klf1h='kubectl logs --since 1h -f'
klf1m='kubectl logs --since 1m -f'
klf1s='kubectl logs --since 1s -f'
kns=kubens
kpf='kubectl port-forward'
krh='kubectl rollout history'
krsd='kubectl rollout status deployment'
krsss='kubectl rollout status statefulset'
kru='kubectl rollout undo'
ks=kubescape
ksd='kubectl scale deployment'
kseal='kubeseal --controller-name=sealed-secrets --scope namespace-wide'
ksss='kubectl scale statefulset'
kst='kubectl get deploy -o json |  jq ".items[] | {name:.metadata.name} + .spec.strategy.rollingUpdate"'
kt=kubetail
util='kubectl get nodes --no-headers | awk '\''{print $1}'\'' | xargs -I {} sh -c '\''echo {} ; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo '\'

# Terraform
tf=terraform
tfa='terraform apply'
tfc='terraform console'
tfd=/usr/local/bin/terraform-dnx
tff='terraform fmt'
tfi='terraform init'
tfo='terraform output'
tfp='terraform plan'
tfv='terraform validate'

#Random Aliases
alias gmd='git checkout main && git merge dev -m' # Git Chechout Main & Git Merge Dev into Main With Message
alias apt='nala' # Replace apt with nala
alias a='apt-get' # APT Package Manager
alias uwu='nala upgrade -y' # Nala upgrade -y
alias 10k='p10k configure' # Configure Powerlevel10k
alias e='nvim' # A highly customizable editor
alias z='zsh' #The better shell
alias tm='tmux' # Terminal Multiplexer
alias ghb='cd ~/GitHub' # Jump to GitHub Projects
alias ct='clear' # Clear Terminal
alias cl='zsh /data/data/com.termux/files/usr/etc/motd/init.sh' # Clear terminal
